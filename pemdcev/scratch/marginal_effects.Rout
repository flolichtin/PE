
R version 4.3.2 (2023-10-31) -- "Eye Holes"
Copyright (C) 2023 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> ## code to prepare `marginal.effects` dataset goes here
> 
> devtools::load_all()
ℹ Loading pemdcev
> 
> library(tidyverse)
── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ dplyr     1.1.3     ✔ readr     2.1.4
✔ forcats   1.0.0     ✔ stringr   1.5.0
✔ ggplot2   3.4.2     ✔ tibble    3.2.1
✔ lubridate 1.9.2     ✔ tidyr     1.3.1
✔ purrr     1.0.2     
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ dplyr::filter() masks stats::filter()
✖ dplyr::lag()    masks stats::lag()
ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors
> library(apollo)


             . ,,                                                            
            ,      ,,                                                        
 ,,,,,,    ,         ,,                                                      
,     ,,  ,            ,,,,.                                                 
,,     , ,,   ,,,,,,    ,,,                                 //  //           
  ,     ,,,.   ,,,,,.   ,,      ////                        //  //           
,,     ,,,,,.           ,,     // //     //////    /////    //  //    /////  
,,,        ,,           ,      //  //    /    //  //   //   //  //   //   // 
              ,,       ,      ////////   /    //  //   //   //  //   //   // 
                ,,   ,,      //     //   /   ///  //   //   //  //   //   // 
                   ,         //      //  /////      ///      //  //    ///   
                                         //                                  
                                         //                                  

Apollo 0.3.2
http://www.ApolloChoiceModelling.com
See url for a detailed manual, examples and a user forum.
Sign up to the user forum to receive updates on new releases.

Please cite Apollo in all written material you produce:
Hess S, Palma D (2019). "Apollo: a flexible, powerful and customisable
freeware package for choice model estimation and application." Journal
of Choice Modelling, 32. doi:10.1016/j.jocm.2019.100170
> library(patchwork)
> 
> rm(list = ls())
> 
> model <- apollo.17
> model.vars <- apollo.17.vars
> 
> list2env(model, envir = .GlobalEnv)
<environment: R_GlobalEnv>
> 
> # drop interactions
> model.vars <-
+   model.vars %>%
+   filter(type != "interaction")
> 
> # example plot (continuous)
> me <- pemdcev::marginal_effects("income", model, model.vars, database, "expe")
> p1 <- plot(me)
> 
> # example plot (dummy)
> me <- pemdcev::marginal_effects("educ_higher", model, model.vars, database, "expe")
> p2 <- plot(me)
> 
> p1 + p2
> 
> # iterate over all vars
> all_vars <- model.vars$x
> 
> all_plots <-
+   all_vars %>%
+   map(function(x) {
+     cat(x, "\n")
+     me <- pemdcev::marginal_effects(x, model, model.vars, database, "expe")
+     plot(me)
+   })
price_certificate 
co2_initial 
income 
emp_full 
n_commute 
ho 
pol_scale 
health 
car_value 
car_annual_km 
car_type_electric 
car_size_small 
car_size_medium 
pt_has 
n_short_flight 
n_medium_flight 
n_long_flight 
re_standard_old 
log_re_area 
hh_size 
age 
sex_male 
educ_secondary 
educ_higher 
diet_omnivore 
ind_concern 
ind_resp 
ind_effic 
ind_exp 
> 
> marginal.effects <- all_plots
> 
> usethis::use_data(marginal.effects, overwrite = TRUE)
✔ Setting active project to '/home/daniehei/pemdcev'
✔ Saving 'marginal.effects' to 'data/marginal.effects.rda'
• Document your data (see 'https://r-pkgs.org/data.html')
> 
> proc.time()
    user   system  elapsed 
1091.351    0.949 1092.559 
